// Generated by gencpp from file can_driver/StepperCmd.msg
// DO NOT EDIT!


#ifndef CAN_DRIVER_MESSAGE_STEPPERCMD_H
#define CAN_DRIVER_MESSAGE_STEPPERCMD_H

#include <ros/service_traits.h>


#include <can_driver/StepperCmdRequest.h>
#include <can_driver/StepperCmdResponse.h>


namespace can_driver
{

struct StepperCmd
{

typedef StepperCmdRequest Request;
typedef StepperCmdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct StepperCmd
} // namespace can_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::can_driver::StepperCmd > {
  static const char* value()
  {
    return "ba19744f08da796611d9a0fb1a26974e";
  }

  static const char* value(const ::can_driver::StepperCmd&) { return value(); }
};

template<>
struct DataType< ::can_driver::StepperCmd > {
  static const char* value()
  {
    return "can_driver/StepperCmd";
  }

  static const char* value(const ::can_driver::StepperCmd&) { return value(); }
};


// service_traits::MD5Sum< ::can_driver::StepperCmdRequest> should match
// service_traits::MD5Sum< ::can_driver::StepperCmd >
template<>
struct MD5Sum< ::can_driver::StepperCmdRequest>
{
  static const char* value()
  {
    return MD5Sum< ::can_driver::StepperCmd >::value();
  }
  static const char* value(const ::can_driver::StepperCmdRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::can_driver::StepperCmdRequest> should match
// service_traits::DataType< ::can_driver::StepperCmd >
template<>
struct DataType< ::can_driver::StepperCmdRequest>
{
  static const char* value()
  {
    return DataType< ::can_driver::StepperCmd >::value();
  }
  static const char* value(const ::can_driver::StepperCmdRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::can_driver::StepperCmdResponse> should match
// service_traits::MD5Sum< ::can_driver::StepperCmd >
template<>
struct MD5Sum< ::can_driver::StepperCmdResponse>
{
  static const char* value()
  {
    return MD5Sum< ::can_driver::StepperCmd >::value();
  }
  static const char* value(const ::can_driver::StepperCmdResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::can_driver::StepperCmdResponse> should match
// service_traits::DataType< ::can_driver::StepperCmd >
template<>
struct DataType< ::can_driver::StepperCmdResponse>
{
  static const char* value()
  {
    return DataType< ::can_driver::StepperCmd >::value();
  }
  static const char* value(const ::can_driver::StepperCmdResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAN_DRIVER_MESSAGE_STEPPERCMD_H
